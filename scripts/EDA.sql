-- EXPLORATORY DATA ANALYSIS
/* This SQL script conducts exploratory data analysis by first listing all tables and columns in the `data_warehouse` schema to understand 
the database structure, then examining unique customer countries and product categories. It identifies the first and last order dates, the 
age range of customers, and calculates key metrics like total sales, quantity sold, average price, total orders, and the number of products 
and customers. The script also breaks down customers by country and gender, products by category, and analyzes average cost, total revenue by 
category, customer revenue contribution, and sales distribution across countries. Finally, it ranks the top 5 best-selling and bottom 
5 worst-performing products by revenue.*/

-- DATABASE EXPLORATION
-- Explore all object in the database
SELECT *
FROM information_schema.tables
WHERE table_schema = 'data_warehouse';

-- Explore all object in the database
SELECT *
FROM information_schema.columns
WHERE table_schema = 'data_warehouse';

-- DIMENSION EXPLORATION
-- Explore all countries our customer come from
SELECT 
	DISTINCT country
FROM gold_dim_customer;

-- Explore all major categories the major division
SELECT 
	DISTINCT category, 
    Sub_category,
    Product_name
FROM gold_dim_product
ORDER BY 1,2,3;

-- DATE EXPLORATION
-- Find the date of the first and last order
-- How many years of sales are available
SELECT
	MIN(Order_date) AS First_order_date,
	MAX(Order_date) AS Last_order_date,
    datediff(MAX(Order_date),MIN(Order_date)) AS Years_diff
FROM gold_fact_sales;

-- Find the youngest and oldest customers
SELECT
	MIN(Birth_date) AS youngest_Birth_date,
    datediff(MAX(Birth_date),now()) AS youngest_customer,
	MAX(Birth_date) AS oldest_Birth_date,
    datediff(MIN(Birth_date),now()) AS oldest_customer
FROM gold_dim_customer;

-- MEASURE EXPLORATION
-- Find the total sales
SELECT Sum(sales) AS Total_sales FROM gold_fact_sales;

-- Find out how many item were sold
SELECT SUM(Quantity) AS total_quantity FROM gold_fact_sales;

-- Find the average selling price
SELECT Round(AVG(price)) AS Avg_price FROM gold_fact_sales;

-- Find the total number of orders
SELECT count(DISTINCT order_number) AS Total_orders FROM gold_fact_sales;

-- Find the total number of product
SELECT count(DISTINCT product_name) AS Total_poduct FROM gold_dim_product;

-- Find the total number of customer
SELECT count(customer_key) AS Total_customer FROM gold_dim_customer;

-- Find the total number of customers that has placed an order
SELECT count(DISTINCT customer_key) AS Total_customer FROM gold_fact_sales;

-- Generate a report that show a key metric of the business
SELECT "Total sales" AS Measure_name, Sum(sales) AS Measure_values FROM gold_fact_sales
UNION ALL
SELECT "Total quantity", SUM(Quantity) AS total_quantity FROM gold_fact_sales
UNION ALL
SELECT "Average_price", Round(AVG(price)) AS Avg_price FROM gold_fact_sales
UNION ALL
SELECT "Total Nr. of orders", count(DISTINCT order_number) AS Total_orders FROM gold_fact_sales
UNION ALL
SELECT "Total Nr. of products", count(DISTINCT product_name) AS Total_poduct FROM gold_dim_product
UNION ALL
SELECT "Total Nr. of customers", count(customer_key) AS Total_customer FROM gold_dim_customer;

-- MAGNITUDE ANALYSIS
-- Find the total customer by country
SELECT 
	count(customer_id) AS customer_count,
    country
FROM gold_dim_customer
GROUP BY 2;

-- Find the total customer by gender
SELECT 
	count(customer_id) AS customer_count,
    gender
FROM gold_dim_customer
GROUP BY 2;

-- Find the total product by category
SELECT 
	count(product_key) AS product_count,
    category
FROM gold_dim_product
GROUP BY 2;

-- What is the avarage cost in each category?
SELECT 
	round(AVG(cost)) AS Avg_cost,
    category
FROM gold_dim_product
GROUP BY category
ORDER BY Avg_cost DESC;

-- What is the total revenue generated for each category?
SELECT
	p.category,
	sum(f.sales) AS Total_revenue
FROM gold_fact_sales f
LEFT JOIN gold_dim_product p
	ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY Total_revenue DESC;

-- Find the total revenue that was generated by each category
SELECT
	c.customer_key,
	c.first_name,
    c.last_name,
    sum(f.sales) AS Total_revenue
FROM gold_fact_sales f
LEFT JOIN gold_dim_customer c
	ON f.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY Total_revenue DESC;

-- What is the distribution of sold item across countries?
SELECT
	c.country,
    sum(f.quantity) AS Total_sold_items
FROM gold_fact_sales f
LEFT JOIN gold_dim_customer c
	ON f.customer_key = c.customer_key
GROUP BY c.country
ORDER BY Total_sold_items DESC;

-- RANKING ANALYSIS
-- Which 5 product generate the highest Revenue
SELECT
p.product_name,
Sum(f.sales) AS Total_revenue,
ROW_NUMBER() OVER(ORDER BY sum(f.sales) DESC) AS rank_products
FROM gold_fact_sales f
LEFT JOIN gold_dim_product p
	ON p.product_key = f.product_key
GROUP BY p.product_name
LIMIT 5;

-- What are the 5 worst performing product in term of sales
SELECT
p.product_name,
Sum(f.sales) AS Total_revenue
FROM gold_fact_sales f
LEFT JOIN gold_dim_product p
	ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY Total_revenue 
LIMIT 5;















