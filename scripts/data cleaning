-- =====================================================================================================================================================
-- Data cleansing, Data standardization, Data normalization, Derived column
-- =====================================================================================================================================================
-- check for nulls and Duplicates
SELECT 
	cst_id,
    count(*) as id_count
FROM crm_cust_info
GROUP BY cst_id
HAVING id_count > 1 OR NULL;

-- checking for unwanted spaces  
SELECT 
	cst_firstname
FROM crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname);

SELECT 
	cst_lastname
FROM crm_cust_info
WHERE cst_lastname != TRIM(cst_lastname);

-- Data standardization
SELECT 
	DISTINCT(cst_gndr)
FROM crm_cust_info;

SELECT 
	DISTINCT(cst_marital_status)
FROM crm_cust_info;

-- changing the date data type 
SELECT cst_create_date
FROM crm_cust_info
WHERE STR_TO_DATE(cst_create_date, '%Y-%m-%d') IS NULL;

UPDATE crm_cust_info
SET cst_create_date = STR_TO_DATE(cst_create_date, '%Y-%m-%d')
WHERE STR_TO_DATE(cst_create_date, '%Y-%m-%d') IS NOT NULL;

-- Final data cleaning query
SELECT 
	cst_id,
	cst_key, 
	TRIM(cst_firstname) AS cst_firstname, -- Removing spaces from your columns 
	TRIM(cst_lastname) AS cst_lastname, -- Removing spaces from your columns 
	cst_gndr,
    CASE 
		WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male' -- normalization to readable format
        WHEN UPPER(TRIM(cst_gndr)) ='F' THEN 'Female' -- normalization to readable format
	ELSE 'n/a' 
    END AS cst_gndr,
	cst_marital_status,
     CASE 
		WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single' -- normalization to readable format
        WHEN UPPER(TRIM(cst_marital_status)) ='M' THEN 'Married' -- normalization to readable format
	ELSE 'n/a' 
    END AS cst_marital_status,
	cst_create_date
FROM (
	SELECT *,
		ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date) Last_rec
	FROM crm_cust_info
) t WHERE Last_rec = 1;	-- selecting the most recent records
